您需要在二叉树的每一行中找到最大的值。

示例：

输入: 

          1
         / \
        3   2
       / \   \  
      5   3   9 

输出: [1, 3, 9]

用一个队列存储树的层次遍历，每次只存入一行数据，并记录这行数据的数量size，然后在向后数size个数中寻找最大值，便是这一行的最大值。在这个过程中同时将左
右非空子树也就是下一行存入队列，进行下一次循环：
public List<Integer> largestValues(TreeNode root) {
        LinkedList<Integer> res=new LinkedList<Integer>();
        if(root==null)
            return res;
        LinkedList<TreeNode> queue=new LinkedList<TreeNode>();
        queue.add(root);

        while(!queue.isEmpty())
        {
            int size=queue.size();
            int max=queue.getFirst().val;
            for(int i=0;i<size;i++)
            {
                TreeNode node=queue.removeFirst();
                if(node.val>max)
                    max=node.val;
                if(node.left!=null)
                    queue.addLast(node.left);
                if(node.right!=null)
                    queue.addLast(node.right);
            }
            res.add(max);
        }
        return res;
    }
