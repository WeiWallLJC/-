21.合并两个有序链表
将两个有序链表合并为一个新的有序链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。 

示例：

输入：1->2->4, 1->3->4
输出：1->1->2->3->4->4

注意题目要求合并为有序链表。
本题可以用递归的方法，将两条链表的元素逐一添加进链表：
public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        if (l1 == null) {
            return l2;
        }
        else if (l2 == null) {
            return l1;
        }
        else if (l1.val < l2.val) {
            l1.next = mergeTwoLists(l1.next, l2);
            return l1;
        }
        else {
            l2.next = mergeTwoLists(l1, l2.next);
            return l2;
        }

    }
这递归用的，真的牛逼。。

而另一种方法则更像是我能想到的方法：
public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        ListNode prehead = new ListNode(-1);

        ListNode prev = prehead;
        while (l1 != null && l2 != null) {
            if (l1.val <= l2.val) {
                prev.next = l1;
                l1 = l1.next;
            } else {
                prev.next = l2;
                l2 = l2.next;
            }
            prev = prev.next;
        }

        prev.next = l1 == null ? l2 : l1;

        return prehead.next;
    }
新建一条链表，不停判断两条链表上元素大小，将小的那个存入链表，直到两条链表中有一条为空。
最后将不为空的那条链表的剩余部分加上，返回结果。

这个方法巧妙的地方在于用一个prev实现了迭代的功能，它始终指向当前操作结点，而不对prehead本身进行操作。