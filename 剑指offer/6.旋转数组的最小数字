把一个数组最开始的若干个元素搬到数组的末尾，我们称之为数组的旋转。
输入一个非递减排序的数组的一个旋转，输出旋转数组的最小元素。
例如数组{3,4,5,1,2}为{1,2,3,4,5}的一个旋转，该数组的最小值为1。
NOTE：给出的所有元素都大于0，若数组大小为0，请返回0。

脑瘫法：
public int minNumberInRotateArray(int [] array) {
        if(array.length==0)
            return 0;
        int min=Integer.MAX_VALUE;
        for(int i=0;i<array.length;i++)
        {
            if(array[i]<min)
                min=array[i];
        }
        return min;
    }

不那么脑瘫法：
运用题目非递减排序的条件进行判断
public int minNumberInRotateArray(int [] array) {
        int n = array.length;
        if(n == 0){
            return 0;
        }
        for(int i=0;i<n-1;i++){
            if(array[i] >array[i+1]){
                return array[i+1];
            }
        }
        return array[0];
    }
    
排序法：
用Arrays中的sort方法排序，直接输出最小值
public int minNumberInRotateArray(int [] array) {
        int n = array.length;
        if(n == 0){
            return 0;
        }
        Arrays.sort(array);
        return array[0];
    }
