一只青蛙一次可以跳上1级台阶，也可以跳上2级……它也可以跳上n级。求该青蛙跳上一个n级的台阶总共有多少种跳法。

递归法：
public int JumpFloorII(int target) {
        int n=0;
        if(target<=2)
            n=target;
        else
        {
            for(int i=1;i<=target;i++)
                n+=JumpFloorII(target-i);
            n+=1;
        }
        return n;
    }
    
数学归纳法：
f(n) = f(n-1) + f(n-2) + ... + f(1) + f(0) = 2*f(n-1)

public int JumpFloorII(int target) {
        if (target <= 0) {
            return -1;
        } else if (target == 1) {
            return 1;
        } else {
            return 2 * JumpFloorII(target - 1);
        }
    }

public int jumpFloor(int target) {
		if (target <= 0) return 0;
		if (target == 1) return 1;
		int a = 1;
		int b = 2;
		for (int i = 2; i <= target; i++) {
			b = 2 * a;
			a = b;
		}
		return b;
	}

public static int jumpFloor(int target) {
    if (target <= 0) return 0;
		return (int) Math.pow(2, target - 1);
  }
