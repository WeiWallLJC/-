从上往下打印出二叉树的每个节点，同层节点从左至右打印。

使用队列将二叉树的节点依次打印：
public ArrayList<Integer> PrintFromTopToBottom(TreeNode root) {
        ArrayList<Integer> list=new ArrayList<Integer>();
        Queue<TreeNode> queue=new LinkedList<TreeNode>();
        TreeNode current=root;
        if(root==null)
            return list;
        queue.offer(current);
        while(!queue.isEmpty())
        {
            current=queue.poll();
            list.add(current.val);
            if(current.left!=null)
                queue.offer(current.left);
            if(current.right!=null)
                queue.offer(current.right);
        }
        return list;
    }

可以用另一种方法避免打印空节点：
public ArrayList<Integer> PrintFromTopToBottom(TreeNode root) {
        ArrayList<Integer> list = new ArrayList<>();
        Queue<TreeNode> queue = new LinkedList<>();
        queue.add(root);
        while (!queue.isEmpty()) {
            TreeNode node = queue.remove();
            if (node == null) {
                continue;
            }
            list.add(node.val);
            queue.add(node.left);
            queue.add(node.right);
        }
        return list;
    }
